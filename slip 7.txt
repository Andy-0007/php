movie.xml 
<?xml version="1.0" encoding="UTF-8"?> 
 
<movieinfo> 
 
<movie> 
    <MovieNo> 1 </MovieNo> 
    <MovieTitle> DDLJ </MovieTitle > 
    <ActorName> Saharukh Kajol</ActorName> 
    <ReleaseYear> 2000 </ReleaseYear> 
</movie> 
 
<movie> 
        <MovieNo> 2 </MovieNo> 
    <MovieTitle> Murder  </MovieTitle > 
    <ActorName> John </ActorName> 
    <ReleaseYear> 2002 </ReleaseYear> 
</movie> 
 
<movie> 
        <MovieNo> 3 </MovieNo> 
    <MovieTitle> Singham  </MovieTitle > 
    <ActorName> Ajay Devgan </ActorName> 
    <ReleaseYear> 2020 </ReleaseYear> 
</movie> 
 
</movieinfo> 





 
movie.php 
 
<?php 
 
$dom=new DomDocument(); 
 
$dom->load("movie.xml"); 
 
echo "<h2> Movie Title </h2>"; 
 
 
$mtitle=$dom->getElementsByTagName("MovieTitle"); 
 
foreach($mtitle as $mt) 
{ 
 
echo "<b>$mt->textContent<b><br><br>"; 
} 
 
 
echo "<h2> Actor Name </h2>"; 
 
 
$aname=$dom->getElementsByTagName("ActorName"); 
 
foreach($aname as $an) 
{ 
 
echo "<b>$an->textContent<b><br><br>"; 
} 
 
?>












import pandas as pd
from mlxtend.preprocessing import TransactionEncoder
from mlxtend.frequent_patterns import apriori, association_rules

# Read the dataset
df = pd.read_csv('Market_Basket_Optimisation.csv', header=None)

# Drop null values
df.dropna(inplace=True)

# Convert categorical values to numeric using one-hot encoding
te = TransactionEncoder()
te_ary = te.fit(df.values).transform(df.values)
df_encoded = pd.DataFrame(te_ary, columns=te.columns_)

# Generate frequent itemsets using apriori algorithm
frequent_itemsets = apriori(df_encoded, min_support=0.01, use_colnames=True)

# Generate association rules from frequent itemsets
rules = association_rules(frequent_itemsets, metric="lift", min_threshold=1)

# Display information
print("Original Dataset:\n")
print(df.head())

print("\nFrequent Itemsets:\n")
print(frequent_itemsets)

print("\nAssociation Rules:\n")
print(rules)

