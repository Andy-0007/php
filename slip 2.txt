HTML file :  font.html  
<html>  
<body>  
<form action="font.php" method="get">  
<center> 
<b>Select font style :</b><input type=text name=s1> <br>  
<b>Enter font size : </b><input type=text name=s><br>  
<b>Enter font color : </b><input type=text name=c><br>  
<b>Enter background color :</b> <input type=text name=b><br>  
<input type=submit value="Next">  
</center>  
</form>  
</body>  
</html> 
 
 
 
 
PHP file : font.php  
<?php  
echo "style is ".$_GET['s1']."<br>color is ".$_GET['c']."<br>Background color is ".$_GET['b']."<br>size is 
".$_GET['s'];  
setcookie("set1",$_GET['s1'],time()+3600);  
setcookie("set4",$_GET['s'],time()+3600);  
setcookie("set2",$_GET['c'],time()+3600);  
setcookie("set3",$_GET['b'],time()+3600);  
?>  
<html>  
<body>  
<form action="fontpref.php">  
<input type=submit value=OK>  
</form>  
</body>  
</html> 





PHP file : fontpref.php  
<?php  
$style = $_COOKIE['set1'];  
$color = $_COOKIE['set2'];  
$size = $_COOKIE['set4'];  
$b_color = $_COOKIE['set3'];  
$msg = "NR Classes";  
echo "<body bgcolor=$b_color>";  
echo "<font color=$color size=$size>$msg";  
echo "</font> </body>";         
?>










import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression

# Create the Salary dataset
data = {
    'YearsExperience': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
    'Salary': [50000, 60000, 70000, 80000, 90000, 100000, 110000, 120000, 130000, 140000]
}
df = pd.DataFrame(data)

# Identify the independent and target variables
X = df.iloc[:, 0:1].values  # Independent variable (YearsExperience)
Y = df.iloc[:, 1].values    # Target variable (Salary)

# Split the variables into training and testing sets with a 7:3 ratio
X_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=0.3, random_state=0)

# Print the training and testing sets
print("X_train:\n", X_train)
print("y_train:\n", y_train)
print("X_test:\n", X_test)
print("y_test:\n", y_test)

# Build a simple linear regression model
regressor = LinearRegression()
regressor.fit(X_train, y_train)

# Print the coefficients and intercept
print("Coefficients:", regressor.coef_)
print("Intercept:", regressor.intercept_)
